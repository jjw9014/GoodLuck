<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
				        http://www.springframework.org/schema/tx
				        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<!-- druid数据源  -->
	<bean id="dataSourceMysql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="${mysql.jdbc.driver}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />

		<!-- 本地环境数据库 -->
		<!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/fcbox_local?useUnicode=true&amp;characterEncoding=utf-8" />-->
		<!--<property name="username" value="root" />-->
		<!--<property name="password" value="root" />-->

		<!-- 配置连接池初始化大小、最小、最大 -->
		<property name="initialSize" value="${mysql.jdbc.initialSize}" />
		<property name="minIdle" value="${mysql.jdbc.minIdle}" />
		<property name="maxActive" value="${mysql.jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间，单位是毫秒 -->
		<property name="maxWait" value="${mysql.jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${mysql.jdbc.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${mysql.jdbc.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="select 1 from dual" />
		<property name="testWhileIdle" value="${mysql.jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${mysql.jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${mysql.jdbc.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${mysql.jdbc.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${mysql.jdbc.maxPoolPreparedStatementPerConnectionSize}" />

	</bean>

	<bean id="pageHelperMysql" class="com.github.pagehelper.PageHelper">
		<property name="properties" >
			<props>
				<prop key="dbms">mysql</prop>
				<prop key="reasonable">false</prop>
				<prop key="pageSizeZero">true</prop>
			</props>
		</property>
	</bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactoryMysql" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceMysql" />
        <property name="mapperLocations" value="classpath*:mysqlmappers/*Mapper.xml" />
        <property name="typeAliasesPackage" value="com.help.resourcepool.fault.model, com.help.resourcepool.common.cache.model,
        com.help.resourcepool.cell.model, com.help.resourcepool.cabinet.model" />
		<property name="plugins">
			<list>
				<ref bean="pageHelperMysql" />
			</list>
		</property>
    </bean>

    <bean id="mapperScannerConfigurerMysql" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryMysql" />
        <property name="basePackage" value="com.help.resourcepool.fault.dao.mysql, com.help.resourcepool.common.cache.dao,
        com.help.resourcepool.cell.dao, com.help.resourcepool.cabinet.dao" />
    </bean>

    <!-- 事务注解配置 -->
    <tx:annotation-driven transaction-manager="txManagerMysql" mode="proxy" />

    <!-- 对数据源进行事务管理 -->
    <bean id="txManagerMysql"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceMysql" />
    </bean>

    <!-- 提供手动控制事物模板 -->
    <bean id="transactionTemplateMysql"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="txManagerMysql" />
        </property>
        <!--ISOLATION_DEFAULT 表示由使用的数据库决定 -->
        <property name="isolationLevelName" value="ISOLATION_DEFAULT" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
        <property name="timeout" value="30" />
    </bean>
</beans>